plugins {
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.41'
    id 'net.neoforged.gradle.mixin' version '7.0.41'
    id 'java-library'
}

version = "${mc_version}-${mod_version}"
group = 'vectorwing.farmersdelight' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'FarmersDelight'

//sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft.accessTransformers.file rootProject.file('src/main/resources/META-INF/accesstransformer.cfg')

mixin {
    config 'farmersdelight.mixins.json'
}

runs {
    configureEach {
        workingDirectory project.file("run/${it.name}")
        // Recommended logging data for a userdev environment
        systemProperty 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
        // Recommended logging level for the console
        systemProperty 'forge.logging.console.level', 'debug'
        modSource project.sourceSets.main
    }

    client {
        systemProperty 'forge.enabledGameTestNamespaces', "farmersdelight"
    }

    server {
        systemProperty 'forge.enabledGameTestNamespaces', "farmersdelight"
        programArgument '--nogui'
    }

    data {
        programArguments.addAll '--mod', "farmersdelight", '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}

repositories {
    maven {
        // JEI
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // CraftTweaker
        name = "BlameJared"
        url = "https://maven.blamejared.com/"
    }
    maven { url "https://maven.ryanliptak.com/" }
}

sourceSets.main.resources {
    srcDirs += 'src/generated/resources'
}

dependencies {
    implementation "net.neoforged:neoforge:${neo_version}"

    // compile against the JEI API but do not include it at runtime
    /*
    compileOnly "mezz.jei:jei-${mc_version}-common-api:${jei_version}"
    compileOnly "mezz.jei:jei-${mc_version}-forge-api:${jei_version}"
    // at runtime, use the full JEI jar for Forge
    /*
    runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}-forge:${jei_version}")
     */
    compileOnly "squeek.appleskin:appleskin-neoforge:${appleskin_version}:api"
    runtimeOnly "squeek.appleskin:appleskin-neoforge:${appleskin_version}"

    /*
    def ctDep = fg.deobf("com.blamejared.crafttweaker:CraftTweaker-forge-1.20.1:${crafttweaker_version}")
    compileOnly ctDep
    runtimeOnly ctDep

    annotationProcessor ctDep
    annotationProcessor "com.blamejared.crafttweaker:Crafttweaker_Annotation_Processors:${crafttweaker_ap_version}"
    annotationProcessor "org.reflections:reflections:0.9.10" // CT dep
    annotationProcessor "com.google.code.gson:gson:2.8.7" // CT dep

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

     */

}

tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                "Specification-Title"     : "farmersdelight",
                "Specification-Vendor"    : "vectorwing",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "vectorwing",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs"            : "farmersdelight.mixins.json"
        ])
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}

compileJava {
    options.compilerArgs << "-Acrafttweaker.processor.document.output_directory=${file('docsOut')}"
}